import{_ as s,c as a,o as i,V as n}from"./chunks/framework.DIvs8UGF.js";const g=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"guide/问题排查.md","filePath":"guide/问题排查.md"}'),e={name:"guide/问题排查.md"},t=n(`<h3 id="开发约束" tabindex="-1">开发约束 <a class="header-anchor" href="#开发约束" aria-label="Permalink to &quot;开发约束&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>接口返回数组/null</span></span>
<span class="line"><span>移动端的模块添加，margin-bottom</span></span></code></pre></div><h3 id="h5切换页面时-新页面内容从视窗下面展示后-再闪烁到正常位置" tabindex="-1">h5切换页面时，新页面内容从视窗下面展示后，再闪烁到正常位置 <a class="header-anchor" href="#h5切换页面时-新页面内容从视窗下面展示后-再闪烁到正常位置" aria-label="Permalink to &quot;h5切换页面时，新页面内容从视窗下面展示后，再闪烁到正常位置&quot;">​</a></h3><p>经排查是最外层的路由组件外面套了 <code>transition</code> 标签，而内部的组件高度没占到 <code>100%</code>，找到紧接的父盒子，设置 <code>height: 100%</code> 即可。</p><h3 id="vue-router-在没有用户交互情况下-执行push-无法返回上一个页面" tabindex="-1">vue-router 在没有用户交互情况下，执行push ，无法返回上一个页面？ <a class="header-anchor" href="#vue-router-在没有用户交互情况下-执行push-无法返回上一个页面" aria-label="Permalink to &quot;vue-router 在没有用户交互情况下，执行push ，无法返回上一个页面？&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>应该是浏览器底层的history的设计问题，可以在跳转之前增加一个跳转提示，用户点击确认，再跳转过去就能解决了，现在很多网站看到跳转到第三方网站，都会有这样的提醒功能</span></span></code></pre></div><h3 id="h5页面撑出进度条" tabindex="-1">h5页面撑出进度条 <a class="header-anchor" href="#h5页面撑出进度条" aria-label="Permalink to &quot;h5页面撑出进度条&quot;">​</a></h3><p>外层的元素的上下margin，用padding实现。</p><h3 id="页面奔溃" tabindex="-1">页面奔溃 <a class="header-anchor" href="#页面奔溃" aria-label="Permalink to &quot;页面奔溃&quot;">​</a></h3><p>下拉框中存在过多的选项，也能够使页面崩溃</p><h3 id="居中弹窗模糊" tabindex="-1">居中弹窗模糊 <a class="header-anchor" href="#居中弹窗模糊" aria-label="Permalink to &quot;居中弹窗模糊&quot;">​</a></h3><p><code>问题代码示例</code></p><blockquote><p>这样写，将导致中间的弹窗内容看起来模糊，与 fixed 和 transform: translate 结合使用有关。</p><p>最后的计算结果若存在小数，就会导致模块，<a href="https://blog.csdn.net/linysuccess/article/details/101213856" target="_blank" rel="noreferrer">参考一</a>、<a href="https://segmentfault.com/q/1010000002926369?utm_source=sf-similar-question" target="_blank" rel="noreferrer">参考二</a></p></blockquote><div class="language-vue vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;mask&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	&lt;div class=&quot;dialog&quot;&gt;&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;style lang=&quot;scss&quot; scoped&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.mask {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    position: fixed;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    top: 0;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    left: 0;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    z-index: 2000;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    width: 100%;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    height: 100%;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    background: rgba(0, 0, 0, 0.6);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    .dialog {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        border-radius: 6px;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        background: #fff;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        position: absolute;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        top: 50%;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        left: 50%;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        transform: translate(-50%, -50%);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/style&gt;</span></span></code></pre></div><p><code>解决方案</code></p><div class="language-vue vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;mask&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	&lt;div class=&quot;dialog&quot;&gt;&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;style lang=&quot;scss&quot; scoped&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.mask {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    position: fixed;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    top: 0;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    left: 0;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    z-index: 2000;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    width: 100%;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    height: 100%;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    background: rgba(0, 0, 0, 0.6);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    display: flex;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    align-items: center;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    justify-content: center;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    .dialog {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        border-radius: 6px;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        background: #fff;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/style&gt;</span></span></code></pre></div><h3 id="调试机型样式问题" tabindex="-1">调试机型样式问题 <a class="header-anchor" href="#调试机型样式问题" aria-label="Permalink to &quot;调试机型样式问题&quot;">​</a></h3><p>有一些页面布局，一些偏移属性是动态计算的，那在浏览器直接换不同机型调整，看起来有问题，其实刷新就好了；要解决的话，应该可以监听 resize 事件</p><h3 id="添加-overflow-未达到限定高度-就出现滚动条" tabindex="-1">添加 overflow，未达到限定高度，就出现滚动条 <a class="header-anchor" href="#添加-overflow-未达到限定高度-就出现滚动条" aria-label="Permalink to &quot;添加 overflow，未达到限定高度，就出现滚动条&quot;">​</a></h3><blockquote><p>看到很多说法，说是内容宽度超出了父元素宽度，但我也没写死高度呀...后面尝试加个padding能够解决</p></blockquote><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.demo</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  overflow-y</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">auto</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  max-height</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">300</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  // 添加这个可以解决问题</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  padding-bottom</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><blockquote><p>解法二，设置 <code>line-height: normal;</code> ，<a href="https://www.cnblogs.com/lovewhatIlove/p/16143478.html" target="_blank" rel="noreferrer">未实验</a></p></blockquote><h3 id="移动端弹窗可滚动背景不滚动-思路" tabindex="-1">移动端弹窗可滚动背景不滚动-思路 <a class="header-anchor" href="#移动端弹窗可滚动背景不滚动-思路" aria-label="Permalink to &quot;移动端弹窗可滚动背景不滚动-思路&quot;">​</a></h3><p><a href="https://www.jianshu.com/p/6022f7346ed2?tdsourcetag=s_pcqq_aiomsg" target="_blank" rel="noreferrer">https://www.jianshu.com/p/6022f7346ed2?tdsourcetag=s_pcqq_aiomsg</a></p><p><a href="https://developers.weixin.qq.com/community/develop/doc/000484ceb88328109697d8e2156c00" target="_blank" rel="noreferrer">https://developers.weixin.qq.com/community/develop/doc/000484ceb88328109697d8e2156c00</a></p><p><a href="https://segmentfault.com/a/1190000038507412" target="_blank" rel="noreferrer">https://segmentfault.com/a/1190000038507412</a></p><h3 id="全局注入脚本" tabindex="-1">全局注入脚本 <a class="header-anchor" href="#全局注入脚本" aria-label="Permalink to &quot;全局注入脚本&quot;">​</a></h3><p>在 <code>index.html</code> 中引入脚本，其注入的全局变量能够直接在 vue 组件中使用，比如引入jquery后，在组件用 <code>$</code></p><p>即便有下面的警告，也能直接用</p><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$&#39; is not defined.eslintno-undef</span></span></code></pre></div><h3 id="vue-根据环境注入脚本" tabindex="-1">vue 根据环境注入脚本 <a class="header-anchor" href="#vue-根据环境注入脚本" aria-label="Permalink to &quot;vue 根据环境注入脚本&quot;">​</a></h3><p><code>index.html</code> 根据环境变量加载不同js及如何使用全局变量</p><blockquote><p>在使用vite时，这些操作会有问题，估计它们是webpack的东西</p></blockquote><p><a href="https://blog.csdn.net/Maxiaobai_ing/article/details/119821145" target="_blank" rel="noreferrer">参考一</a>、<a href="https://www.jianshu.com/p/1d13c9fa9b1b" target="_blank" rel="noreferrer">参考二</a></p><h3 id="vite-构建将模板内的换行删除" tabindex="-1">vite 构建将模板内的换行删除 <a class="header-anchor" href="#vite-构建将模板内的换行删除" aria-label="Permalink to &quot;vite 构建将模板内的换行删除&quot;">​</a></h3><p>导致原本的一些行内元素间的间距改变</p><p>应该是 vite-plugin-vue2 本身导致的，具体可以查<a href="https://github.com/vitejs/vite/issues/7035" target="_blank" rel="noreferrer">缺陷</a></p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">plugins</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    vue</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        template: {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            compilerOptions: {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                whitespace: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;preserve&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    })</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span></code></pre></div>`,38),l=[t];function p(h,k,r,E,d,o){return i(),a("div",null,l)}const u=s(e,[["render",p]]);export{g as __pageData,u as default};
