import{_ as s,c as n,o as a,V as p}from"./chunks/framework.DIvs8UGF.js";const _=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"guide/echarts.md","filePath":"guide/echarts.md"}'),e={name:"guide/echarts.md"},l=p(`<h3 id="echarts图例图标和文字居中" tabindex="-1">echarts图例图标和文字居中 <a class="header-anchor" href="#echarts图例图标和文字居中" aria-label="Permalink to &quot;echarts图例图标和文字居中&quot;">​</a></h3><blockquote><p>图例中存在文字和图标，图标怎么调整属性都不能和文字水平居中</p></blockquote><p><a href="https://blog.csdn.net/m0_73334325/article/details/133764447" target="_blank" rel="noreferrer">https://blog.csdn.net/m0_73334325/article/details/133764447</a></p><h3 id="echarts饼状图-扇形图-自动循环突出放大" tabindex="-1">echarts饼状图 扇形图 自动循环突出放大 <a class="header-anchor" href="#echarts饼状图-扇形图-自动循环突出放大" aria-label="Permalink to &quot;echarts饼状图 扇形图 自动循环突出放大&quot;">​</a></h3><blockquote><p>这里有个很有意思的取余函数的应用</p></blockquote><p>查看<a href="https://www.jianshu.com/p/dc2dc70d5455" target="_blank" rel="noreferrer">网上示例</a>或<a href="https://echarts.apache.org/zh/api.html#action" target="_blank" rel="noreferrer">相关配置</a></p><div class="language-react vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">react</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>var ProportionTasksEchars = echarts.init(document.getElementById(&#39;ProportionTasksEchars&#39;));</span></span>
<span class="line"><span>// 指定图表的配置项和数据</span></span>
<span class="line"><span>var option = {</span></span>
<span class="line"><span>    darkMode: true,</span></span>
<span class="line"><span>    tooltip: {</span></span>
<span class="line"><span>        trigger: &#39;item&#39;</span></span>
<span class="line"><span>    },</span></span>
<span class="line"><span>    legend: {</span></span>
<span class="line"><span>        top: &#39;5%&#39;,</span></span>
<span class="line"><span>        type: &#39;scroll&#39;,</span></span>
<span class="line"><span>        orient: &#39;vertical&#39;,</span></span>
<span class="line"><span>        left: 10,</span></span>
<span class="line"><span>        top: 20,</span></span>
<span class="line"><span>        bottom: 20,</span></span>
<span class="line"><span>        textStyle: {</span></span>
<span class="line"><span>            color: &quot;#fff&quot;</span></span>
<span class="line"><span>        }</span></span>
<span class="line"><span>    },</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    color: [&#39;#58d9f9&#39;, &#39;#4992ff&#39;, &#39;#7cffb2&#39;, &#39;#fddd60&#39;, &#39;#ff6e76&#39;, &#39;#ff6efa&#39;],</span></span>
<span class="line"><span>    series: [{</span></span>
<span class="line"><span>        type: &#39;pie&#39;,</span></span>
<span class="line"><span>        center: [&#39;50%&#39;, &#39;60%&#39;],</span></span>
<span class="line"><span>        radius: [&#39;40%&#39;, &#39;70%&#39;],</span></span>
<span class="line"><span>        avoidLabelOverlap: false,</span></span>
<span class="line"><span>        label: {</span></span>
<span class="line"><span>            show: false,</span></span>
<span class="line"><span>            position: &#39;center&#39;,</span></span>
<span class="line"><span>            formatter: &#39;{b}({d}%)&#39;,</span></span>
<span class="line"><span>            textStyle: {</span></span>
<span class="line"><span>                color: &#39;#ffffff&#39;</span></span>
<span class="line"><span>            },</span></span>
<span class="line"><span>        },</span></span>
<span class="line"><span>        emphasis: {</span></span>
<span class="line"><span>            label: {</span></span>
<span class="line"><span>                show: true,</span></span>
<span class="line"><span>                fontSize: &#39;18&#39;,</span></span>
<span class="line"><span>                fontWeight: &#39;bold&#39;</span></span>
<span class="line"><span>            }</span></span>
<span class="line"><span>        },</span></span>
<span class="line"><span></span></span>
<span class="line"><span>        labelLine: {</span></span>
<span class="line"><span>            show: false</span></span>
<span class="line"><span>        },</span></span>
<span class="line"><span>        data: xxData</span></span>
<span class="line"><span>    }]</span></span>
<span class="line"><span>};</span></span>
<span class="line"><span></span></span>
<span class="line"><span>ProportionTasksEchars.setOption(option);</span></span>
<span class="line"><span>// 自动循环突出放大功能</span></span>
<span class="line"><span>var currentIndex = 0;</span></span>
<span class="line"><span>// 计时器</span></span>
<span class="line"><span>timeSetIntervalFun()</span></span>
<span class="line"><span></span></span>
<span class="line"><span>function timeSetIntervalFun() {</span></span>
<span class="line"><span>    timeSetInterval = setInterval(function() {</span></span>
<span class="line"><span>        var dataLen = option.series[0].data.length;</span></span>
<span class="line"><span>        // 取消之前高亮的图形</span></span>
<span class="line"><span>        ProportionTasksEchars.dispatchAction({</span></span>
<span class="line"><span>            type: &#39;downplay&#39;,</span></span>
<span class="line"><span>            seriesIndex: 0,</span></span>
<span class="line"><span>            dataIndex: currentIndex</span></span>
<span class="line"><span>        });</span></span>
<span class="line"><span>        currentIndex = (currentIndex + 1) % dataLen;</span></span>
<span class="line"><span>        // 高亮当前图形</span></span>
<span class="line"><span>        ProportionTasksEchars.dispatchAction({</span></span>
<span class="line"><span>            type: &#39;highlight&#39;,</span></span>
<span class="line"><span>            seriesIndex: 0,</span></span>
<span class="line"><span>            dataIndex: currentIndex</span></span>
<span class="line"><span>        });</span></span>
<span class="line"><span>    }, 2000);</span></span>
<span class="line"><span>}</span></span>
<span class="line"><span></span></span>
<span class="line"><span>ProportionTasksEchars.on(&#39;mouseover&#39;, function(e) {</span></span>
<span class="line"><span>    clearInterval(timeSetInterval)</span></span>
<span class="line"><span>    //当检测到鼠标悬停事件，取消默认选中高亮</span></span>
<span class="line"><span>    ProportionTasksEchars.dispatchAction({</span></span>
<span class="line"><span>        type: &#39;downplay&#39;,</span></span>
<span class="line"><span>        seriesIndex: 0,</span></span>
<span class="line"><span>        dataIndex: currentIndex</span></span>
<span class="line"><span>    });</span></span>
<span class="line"><span>    //高亮显示悬停的那块</span></span>
<span class="line"><span>    ProportionTasksEchars.dispatchAction({</span></span>
<span class="line"><span>        type: &#39;highlight&#39;,</span></span>
<span class="line"><span>        seriesIndex: 1,</span></span>
<span class="line"><span>        dataIndex: e.dataIndex</span></span>
<span class="line"><span>    });</span></span>
<span class="line"><span>    currentIndex = e.dataIndex;</span></span>
<span class="line"><span>});</span></span>
<span class="line"><span></span></span>
<span class="line"><span>//检测鼠标移出后显示之前默认高亮的那块</span></span>
<span class="line"><span>ProportionTasksEchars.on(&#39;mouseout&#39;, function(e) {</span></span>
<span class="line"><span>    timeSetIntervalFun()</span></span>
<span class="line"><span>    ProportionTasksEchars.dispatchAction({</span></span>
<span class="line"><span>        type: &#39;highlight&#39;,</span></span>
<span class="line"><span>        seriesIndex: 1,</span></span>
<span class="line"><span>        dataIndex: 0</span></span>
<span class="line"><span>    });</span></span>
<span class="line"><span>});</span></span></code></pre></div>`,7),t=[l];function i(c,r,o,d,h,f){return a(),n("div",null,t)}const m=s(e,[["render",i]]);export{_ as __pageData,m as default};
