{
  // Place your snippets for vue here. Each snippet is defined under a snippet name and has a prefix, body and
  // description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
  // $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the
  // same ids are connected.
  // Example:
  // "Print to console": {
  // 	"prefix": "log",
  // 	"body": [
  // 		"console.log('$1');",
  // 		"$2"
  // 	],
  // 	"description": "Log output to console"
  // }
  "vue2-空模板": {
    "prefix": "vue2",
    "body": [
      "<template>",
      "    <div class=\"\">",
      "        $0",
      "    </div>",
      "</template>",
      "",
      "<script>",
      "",
      "export default {",
      "    components: {},",
      "    data() {",
      "        return {}",
      "    },",
      "    computed: {},",
      "",
      "    created() {},",
      "",
      "    methods: {}",
      "}",
      "</script>",
      "",
      "<style lang=\"scss\" scoped>",
      "",
      "</style>",
      ""
    ],
    "description": "vue2-空模板"
  },
  "vue-erp带背景模板": {
    "prefix": "vue-erp",
    "body": [
      "<template>",
      "    <div class=\"transaction-container\">",
      "        <div class=\"filter-container\">",
      "            123",
      "        </div>",
      "    </div>",
      "</template>",
      "",
      "<script>",
      "export default {",
      "    components: {",
      "    },",
      "    data() {",
      "        return {",
      "        }",
      "    },",
      "}",
      "</script>",
      "",
      "<style scoped lang=\"scss\">",
      "@import '@/styles/revision-2023.scss';",
      ".filter-container {",
      "    min-height: calc(100vh - 130px);",
      "    margin-bottom: 0;",
      "    border-radius: 8px;",
      "    background: #fff;",
      "}",
      ".transaction-container {",
      "    position: relative;",
      "    min-height: calc(100vh - 90px);",
      "    padding: 20px;",
      "    background-color: #f6f9ff;",
      "}",
      "</style>",
      ""
    ],
    "description": "vue-erp带背景模板"
  },
  "vue-erp列表模板": {
    "prefix": "vue-erp-list",
    "body": [
      "<template>",
      "    <div class=\"transaction-container\">",
      "        <div class=\"filter-container search-page\">",
      "            <div class=\"search-wrap\">",
      "                <el-row :gutter=\"18\">",
      "                    <el-col :span=\"6\">",
      "                        <el-date-picker",
      "                            v-model=\"queryForm.createTime\"",
      "                            :default-time=\"['00:00:00', '23:59:59']\"",
      "                            clearable",
      "                            value-format=\"yyyy-MM-dd\"",
      "                            type=\"daterange\"",
      "                            start-placeholder=\"创建开始时间\"",
      "                            end-placeholder=\"创建结束时间\"",
      "                            style=\"width: 100%\"",
      "                        />",
      "                    </el-col>",
      "                    <el-col :span=\"3\">",
      "                        <lb-select v-model=\"queryForm.msgType\" style=\"width: 100%\" placeholder=\"消息类型\" clearable>",
      "                            <el-option",
      "                                v-for=\"item in innerMessageType\"",
      "                                :key=\"item.value\"",
      "                                :label=\"item.label\"",
      "                                :value=\"item.value\"",
      "                                :disabled=\"item.disabled\"",
      "                            />",
      "                        </lb-select>",
      "                    </el-col>",
      "                    <el-col :span=\"3\">",
      "                        <lb-select v-model=\"queryForm.sendFlag\" style=\"width: 100%\" placeholder=\"发送状态\" clearable>",
      "                            <el-option label=\"示例1\" value=\"示例1\" />",
      "                            <el-option label=\"示例2\" value=\"示例2\" />",
      "                        </lb-select>",
      "                    </el-col>",
      "                    <el-col :span=\"3\">",
      "                        <lb-input v-model=\"queryForm.name\" placeholder=\"标题名称\" />",
      "                    </el-col>",
      "",
      "                    <el-button class=\"common-btn-2 btn-left\" type=\"primary\" @click=\"search()\">搜索</el-button>",
      "                    <el-button class=\"common-btn-2\" @click=\"reset\">清空</el-button>",
      "                    <el-button v-if=\"hasPerm('/workerSystemInfo/sysInfo/add')\" class=\"common-btn-2\" type=\"primary\" @click=\"skipToPage('add')\">新增消息</el-button>",
      "                </el-row>",
      "            </div>",
      "",
      "            <el-table class=\"diy-table\" :data=\"tableData\" border stripe>",
      "                <div slot=\"empty\" class=\"empty-box\">",
      "                    <img :src=\"require('@/assets/images/empty.png')\" />",
      "                    <span class=\"empty-text\">暂无数据</span>",
      "                </div>",
      "                <el-table-column align=\"center\" prop=\"createTime\" label=\"创建时间\" />",
      "                <el-table-column align=\"center\" prop=\"msgType\" label=\"消息类型\">",
      "                    <template slot-scope=\"scope\">",
      "                        <span>{{ getLabel(innerMessageType, scope.row.msgType) || '-' }}</span>",
      "                    </template>",
      "                </el-table-column>",
      "                <el-table-column align=\"center\" prop=\"name\" label=\"消息标题\" show-overflow-tooltip />",
      "                <el-table-column align=\"center\" prop=\"sendRange\" label=\"发送对象\" show-overflow-tooltip />",
      "                <el-table-column align=\"center\" prop=\"pushTime\" label=\"发送时间\" />",
      "                <el-table-column align=\"center\" prop=\"otherConfig\" label=\"其他设置\" />",
      "                <el-table-column align=\"center\" prop=\"alreadySendNum\" label=\"已发送人数\" />",
      "                <el-table-column align=\"center\" prop=\"userVisitor\" label=\"点击人数\" />",
      "                <el-table-column align=\"center\" prop=\"praisenum\" label=\"点赞数\" />",
      "                <el-table-column align=\"center\" label=\"操作\" width=\"200\">",
      "                    <template slot-scope=\"scope\">",
      "                        <el-button v-if=\"hasPerm('/workerSystemInfo/sysInfo/view') && [0, 2, 1, 3].includes(scope.row.sendFlag)\" type=\"text\" size=\"small\" @click=\"skipToPage('view', scope.row)\">查看</el-button>",
      "                        <el-button v-if=\"hasPerm('/workerSystemInfo/sysInfo/edit') && [0].includes(scope.row.sendFlag)\" type=\"text\" size=\"small\" @click=\"skipToPage('edit', scope.row)\">编辑</el-button>",
      "                        <el-button v-if=\"[0, 2, 1, 3].includes(scope.row.sendFlag)\" type=\"text\" size=\"small\" @click=\"handleClickLog(scope.row)\">日志</el-button>",
      "                    </template>",
      "                </el-table-column>",
      "            </el-table>",
      "            <my-pagination",
      "                v-if=\"total\"",
      "                class=\"unify-pagination\"",
      "                :current-page=\"queryForm.pageNum\"",
      "                :total=\"total\"",
      "                :page-size=\"queryForm.pageSize\"",
      "                @handleCurrentChange=\"handleCurrentChange\"",
      "                @handleSizeChange=\"handleSizeChange\"",
      "            />",
      "        </div>",
      "    </div>",
      "</template>",
      "",
      "<script>",
      "// todoMaster",
      "// import { demoAPI } from '@/api/worked'",
      "import { innerMessageType } from '@/data/ptxdjson'",
      "import LbSelect from '@/components/lbSelectPlus'",
      "import LbInput from '@/components/lbInput'",
      "export default {",
      "    components: {",
      "        LbSelect,",
      "        LbInput",
      "    },",
      "    data() {",
      "        return {",
      "            innerMessageType,",
      "            queryForm: {",
      "                createTime: [],",
      "                msgType: '',",
      "                sendFlag: '',",
      "                name: '',",
      "                pageNum: 1,",
      "                pageSize: 10",
      "            },",
      "            total: 0, // 总条数",
      "            tableData: []",
      "        }",
      "    },",
      "    created() {",
      "        // todoMaster 开启",
      "        // this.search()",
      "    },",
      "    methods: {",
      "        // 从标准枚举获取标签名",
      "        getLabel(list, value) {",
      "            if ([undefined, null, ''].includes(value)) {",
      "                return ''",
      "            }",
      "            const target = list.find(_ => _.value == value)",
      "            return target ? target.label : ''",
      "        },",
      "        reset() {",
      "            this.queryForm = {",
      "                createTime: [],",
      "                msgType: '',",
      "                sendFlag: '',",
      "                name: '',",
      "                pageNum: 1,",
      "                pageSize: 10",
      "            }",
      "            this.search()",
      "        },",
      "        getParams() {",
      "            const { createTime = [] } = this.queryForm",
      "            const params = {",
      "                ...this.queryForm,",
      "                queryStartTime: createTime && createTime[0] ? `${createTime[0]} 00:00:00` : '',",
      "                queryEndTime: createTime && createTime[1] ? `${createTime[1]} 23:59:59` : ''",
      "            }",
      "            return params",
      "        },",
      "        async search(newPageNum = 1) {",
      "            this.queryForm.pageNum = newPageNum",
      "            // 获取查询参数",
      "            const params = this.getParams()",
      "            // todoMaster",
      "            const demoAPI = ''",
      "            const res = await demoAPI(params)",
      "            const result = res.data.data.resultData",
      "            Object.assign(this, {",
      "                tableData: result.list || [],",
      "                total: result.total",
      "            })",
      "        },",
      "        // 分页",
      "        handleCurrentChange(val) {",
      "            this.search(val)",
      "        },",
      "        handleSizeChange(val) {",
      "            this.queryForm.pageSize = val",
      "            this.search()",
      "        },",
      "    }",
      "}",
      "</script>",
      "",
      "<style scoped lang=\"scss\">",
      "@import '@/styles/revision-2023.scss';",
      ".filter-container {",
      "    min-height: calc(100vh - 130px);",
      "    margin-bottom: 0;",
      "    border-radius: 8px;",
      "    background: #fff;",
      "}",
      ".transaction-container {",
      "    position: relative;",
      "    min-height: calc(100vh - 90px);",
      "    padding: 20px;",
      "    background-color: #f6f9ff;",
      "}",
      ".search-page {",
      "    padding: 20px;",
      "    // select-tag长度限制",
      "    ::v-deep .el-select .el-tag {",
      "        max-width: 90px !important;",
      "    }",
      "}",
      "",
      ".search-wrap {",
      "    margin-bottom: 12px;",
      "    .el-col {",
      "        margin-bottom: 10px;",
      "    }",
      "}",
      "",
      ".diy-table {",
      "    margin-bottom: 30px;",
      "}",
      "</style>",
      ""
    ],
    "description": "vue-erp列表模板"
  },
  "erp 上传文件辅助": {
    "prefix": "upload-img",
    "body": [
      "<template>",
      "    <div>",
      "        <!-- 上传图片样式 -->",
      "        <div class=\"img-control-wrap\">",
      "            <upload-img",
      "                :key=\"new Date().getTime()\"",
      "                class=\"upload-img\"",
      "                :upload-img-list.sync=\"uploadImgList\"",
      "                :compress=\"0\"",
      "                :size=\"10240\"",
      "                :limit=\"3\"",
      "                :file-list=\"fileList\"",
      "                :hidden=\"fileList.length >= 3\"",
      "                store-name=\"resource/attch\"",
      "                type-arr=\"image/png,image/jpg,image/gif,image/jpeg\"",
      "                @callback=\"uploadCallback\"",
      "                @removeCallback=\"removeCallback\"",
      "            />",
      "            <span class=\"upload-img-count\"",
      "                >{{ fileList.length }}/3</span",
      "            >",
      "        </div>",
      "        <!-- 展示图片列表，兼容图片缺少阿里云前缀的情况 -->",
      "        <img v-for=\"(cell, index) in treatPicture(imgs)\" :key=\"index\" class=\"kefu-img\" :src=\"cell\" />",
      "        <!-- 展示图片列表，兼容图片缺少阿里云前缀的情况-带预览 -->",
      "        <viewer v-if=\"imgs\" style=\"display: inline-block\">",
      "            <img v-for=\"(cell, index) in treatPicture(imgs)\" :key=\"index\" class=\"kefu-img\" :src=\"cell\" />",
      "        </viewer>",
      "    </div>",
      "</template>",
      "",
      "<script>",
      "import uploadImg from '@/components/uploadImg'",
      "",
      "export default {",
      "    components: {",
      "        uploadImg",
      "    },",
      "    data() {",
      "        return {",
      "            /* 上传图片 */",
      "            oss: {",
      "                host: 'https://lbdj.oss-cn-beijing.aliyuncs.com/' // 阿里云的前缀地址",
      "            },",
      "            uploadImgList: [],",
      "            fileList: [],",
      "            /* 展示图片列表 */",
      "            imgs: ['https://xxx', 'xxx']",
      "        }",
      "    },",
      "    methods: {",
      "        /* 上传图片 */",
      "        uploadCallback(url, index) {",
      "            const fullUrl = url",
      "            this.uploadImgList.push(fullUrl)",
      "            this.img = this.uploadImgList.join(',')",
      "        },",
      "        removeCallback(url, index) {",
      "            const fullUrl = url.indexOf(this.oss.host) == -1 ? this.oss.host + url : url",
      "            this.removeItem(this.uploadImgList, fullUrl)",
      "        },",
      "        removeItem(urlList, val) {",
      "            for (let i = 0; i < urlList.length; i++) {",
      "                const itemUrl = urlList[i]",
      "                const newItemUrl = itemUrl.indexOf(this.oss.host) == -1 ? this.oss.host + itemUrl : itemUrl",
      "                const newVal = val.indexOf(this.oss.host) == -1 ? this.oss.host + val : val",
      "                if (newItemUrl === newVal) {",
      "                    urlList.splice(i, 1)",
      "                }",
      "            }",
      "        },",
      "        /* 展示图片列表 */",
      "        treatPicture(imgs = []) {",
      "            let arr = []",
      "            if (imgs.length) {",
      "                try {",
      "                    const list = JSON.parse(imgs)",
      "                    arr = list.map(e => {",
      "                        if (e.indexOf('http') !== -1) {",
      "                            return e",
      "                        }",
      "                        return `https://lbdj.oss-cn-beijing.aliyuncs.com/\\${e}`",
      "                    })",
      "                } catch (error) {",
      "                    const list = imgs",
      "                    if (Array.isArray(list)) {",
      "                        arr = list.map(e => {",
      "                            if (e.indexOf('http') !== -1) {",
      "                                return e",
      "                            }",
      "                            return `https://lbdj.oss-cn-beijing.aliyuncs.com/\\${e}`",
      "                        })",
      "                    }",
      "                }",
      "            }",
      "            return arr",
      "        },",
      "        /* 上传图片组件回显图片-看需求要不要 */",
      "        async demoApi() {",
      "            const apiDemo = null",
      "",
      "            const res = await apiDemo({})",
      "            if (res.data.code == 200) {",
      "                const result = res.data.data",
      "                ",
      "                // 装配图片字段",
      "                this.fileList = this.assemblyPicture(result.imgs)",
      "            } else {",
      "                this.\\$message({",
      "                    type: 'error',",
      "                    message: res.data.msg",
      "                })",
      "            }",
      "        },",
      "        assemblyPicture(imgs = []) {",
      "            let arr = []",
      "            if (imgs.length) {",
      "                try {",
      "                    const list = JSON.parse(imgs)",
      "                    arr = list.map(e => {",
      "                        if (e.indexOf('http') !== -1) {",
      "                            return e",
      "                        }",
      "                        return `https://lbdj.oss-cn-beijing.aliyuncs.com/\\${e}`",
      "                    })",
      "                } catch (error) {",
      "                    const list = imgs",
      "                    if (Array.isArray(list)) {",
      "                        arr = list.map(e => {",
      "                            if (e.indexOf('http') !== -1) {",
      "                                return e",
      "                            }",
      "                            return `https://lbdj.oss-cn-beijing.aliyuncs.com/\\${e}`",
      "                        })",
      "                    }",
      "                }",
      "            }",
      "            // 回显必须使用[ { url: url } ] 形式",
      "            const result = arr.map(e => {",
      "                return {",
      "                    url: e",
      "                }",
      "            })",
      "            return result",
      "        },",
      "    }",
      "}",
      "</script>",
      "",
      "<style lang=\"scss\" scoped>",
      ".img-control-wrap ::v-deep {",
      "    display: flex;",
      "    align-items: flex-end;",
      "    .el-upload {",
      "    }",
      "    .el-upload-list--picture-card .el-upload-list__item {",
      "        margin-bottom: 0;",
      "    }",
      "    .upload-img {",
      "        display: inline-block;",
      "        zoom: 0.7;",
      "    }",
      "    .upload-img-count {",
      "        margin-left: 12px;",
      "        font-size: 12px;",
      "        color: #909399;",
      "    }",
      "}",
      "",
      "// 展示图片列表",
      ".kefu-img {",
      "    height: 40px;",
      "    margin: 0 12px 0 0;",
      "    cursor: pointer;",
      "}",
      "</style>",
      ""
    ],
    "description": "erp 上传文件辅助"
  },
  "erp 上传单张图片": {
    "prefix": "upload-img-single",
    "body": [
      "<!-- 图片限制1张时适用 -->",
      "<template>",
      "    <div>",
      "        <!-- 限制最多上传1张，大小最大为5MB -->",
      "        <upload-img",
      "            class=\"upload-img\"",
      "            store-name=\"upload/test\"",
      "            :upload-img-list.sync=\"uploadImgList\"",
      "            :limit=\"1\"",
      "            :file-list=\"fileList\"",
      "            :hidden=\"fileList.length >= 1\"",
      "            type-arr=\"image/png,image/jpg,image/gif,image/jpeg\"",
      "            :size=\"5120\"",
      "            :disabled=\"false\"",
      "            @callback=\"uploadCallback\"",
      "            @removeCallback=\"removeImg\"",
      "        />",
      "        <span @click=\"cleanImg\">清空图片</span>",
      "        <span @click=\"getResult\">获取结果</span>",
      "    </div>",
      "</template>",
      "",
      "<script>",
      "import uploadImg from '@/components/uploadImg'",
      "export default {",
      "    components: {",
      "        uploadImg",
      "    },",
      "    data() {",
      "        return {",
      "            configForm: {",
      "                imgUrl: ''",
      "            },",
      "            uploadImgList: [],",
      "            fileList: [],",
      "        }",
      "    },",
      "    created() {",
      "        this.init()",
      "    },",
      "",
      "    methods: {",
      "        /******* 初始化 ******/",
      "        init() {",
      "            let arr = [\"/upload/order/2023-09-26-01-53-24/AF52259299B0F83CFD2D6420E4C63E43/mmexport1695013303789(1).jpg\"]",
      "            arr = arr.map(url => this.handlerImgPrefix(url))",
      "",
      "            this.uploadImgList = arr",
      "            arr.forEach(item => {",
      "                this.fileList.push({",
      "                    url: item",
      "                })",
      "            })",
      "        },",
      "",
      "        /******* 相关交互 ******/",
      "        // 图片上传回调",
      "        uploadCallback(url) {",
      "            this.uploadImgList.push(url)",
      "        },",
      "        // 图片删除回调",
      "        removeImg() {",
      "            this.uploadImgList = []",
      "        },",
      "",
      "        /******* 手动清空 ******/",
      "        cleanImg() {",
      "            this.uploadImgList = []",
      "            this.fileList = []",
      "        },",
      "",
      "        /******* 获取结果 ******/",
      "        getResult() {",
      "            const result = this.handlerImgPrefix(this.uploadImgList[0])",
      "            console.log('====-----结果-----====', result)",
      "        }",
      "    }",
      "}",
      "</script>",
      "",
      "<style lang=\"scss\" scoped>",
      ".upload-img {",
      "    zoom: 0.8;",
      "}",
      "</style>",
      ""
    ],
    "description": "erp 上传单张图片"
  },
  "erp diy-dialog 模板": {
    "prefix": "vue-dialog",
    "body": [
      "<template>",
      "    <diy-dialog",
      "        ref=\"dialogRef\"",
      "        title=\"更换客服\"",
      "        title-in-center",
      "        width=\"1400px\"",
      "        @confirm=\"confirm\"",
      "    >",
      "        123",
      "    </diy-dialog>",
      "</template>",
      "",
      "<script>",
      "",
      "import diyDialog from '@/components/diyDialog'",
      "",
      "export default {",
      "    components: {",
      "        diyDialog",
      "    },",
      "    data() {",
      "        return {}",
      "    },",
      "    computed: {},",
      "",
      "    created() {},",
      "",
      "    methods: {",
      "        showDialog() {",
      "            this.reset()",
      "            this.\\$refs.dialogRef.showDialog()",
      "        },",
      "        // 打开前重置，关闭按钮没添加回调",
      "        reset() {},",
      "        async confirm() {",
      "            // todoMaster",
      "            const apiDemo = null",
      "",
      "            this.\\$refs.dialogRef.beginLoading()",
      "            const res = await apiDemo({})",
      "            // todoMaster 确认接口返回数据结构",
      "            if (res.data.code == 200) {",
      "                const result = res.data.data",
      "                this.\\$message({",
      "                    type: 'success',",
      "                    message: '操作成功'",
      "                })",
      "                this.\\$refs.dialogRef.completeLoading()",
      "            } else {",
      "                this.\\$message({",
      "                    type: 'error',",
      "                    message: res.data.msg",
      "                })",
      "                this.\\$refs.dialogRef.terminateLoading()",
      "            }",
      "        }",
      "    }",
      "}",
      "</script>",
      "",
      "<style lang=\"scss\" scoped>",
      "",
      "</style>",
      ""
    ],
    "description": "erp diy-dialog 模板"
  },
  "组件规范table示例": {
    "prefix": "table-lb",
    "body": [
      "<template>",
      "    <div class=\"transaction-container lb-configable-page\">",
      "        <lb-search :value=\"searchParams\" :options=\"searchOptions\" @load=\"searchList\">",
      "            <template slot=\"operate-suffix\">",
      "                <el-button",
      "                    type=\"text\"",
      "                    icon=\"el-icon-upload2\"",
      "                >导出</el-button>",
      "            </template>",
      "        </lb-search>",
      "        <lb-table",
      "            v-loading=\"tableLoading\"",
      "            :data=\"tableData\"",
      "            :pagination.sync=\"pagination\"",
      "            :options=\"tableOptions\"",
      "            border",
      "            fit",
      "            highlight-current-row",
      "            @page-change=\"handlePageChange\"",
      "        >",
      "            <template slot=\"top-left\">",
      "                <span class=\"lb-table-operate-item\" type=\"text\" @click=\"xxx\">",
      "                    左上角按钮",
      "                </span>",
      "            </template>",
      "            <template #operate=\"scope\">",
      "                <el-button type=\"text\">查看{{ scope.row.xx }}</el-button>",
      "            </template>",
      "        </lb-table>",
      "    </div>",
      "</template>",
      "",
      "<script>",
      "import { PAGENAME_TYPE } from '@/components/lbTableList/type'",
      "import { getJDQueryBusSignPage } from '@/api/businessmanage'",
      "export default {",
      "    setup() {",
      "        const searchParams = ref({",
      "            entryTimes: [],",
      "            signOrderSn: '',",
      "            businessName: '',",
      "            status: undefined",
      "        })",
      "        const searchOptions = ref({",
      "            pageKey: PAGENAME_TYPE.JINGDONG_HOME_CARE_SIGN,",
      "            column: [",
      "                {",
      "                    type: 'composition',",
      "                    children: [",
      "                        {",
      "                            prop: 'timeType',",
      "                            type: 'select',",
      "                            placeholder: '时间类型',",
      "                            span: 2,",
      "                            dicData: [",
      "                                { label: '报名时间', value: 0 },",
      "                                { label: '创建时间', value: 1 }",
      "                            ]",
      "                        },",
      "                        {",
      "                            prop: 'timeSection',",
      "                            type: 'daterange',",
      "                            placeholder: '查询时间',",
      "                            span: 6,",
      "                            defaultTime: ['00:00:00', '23:59:59'],",
      "                            valueFormat: 'yyyy-MM-dd HH:mm:ss',",
      "                            startPlaceholder: '开始时间',",
      "                            endPlaceholder: '结束时间',",
      "                            clearable: true",
      "                        }",
      "                    ]",
      "                },",
      "                {",
      "                    prop: 'entryTimes',",
      "                    type: 'daterange',",
      "                    placeholder: '查询时间',",
      "                    defaultTime: ['00:00:00', '23:59:59'],",
      "                    valueFormat: 'yyyy-MM-dd HH:mm:ss',",
      "                    startPlaceholder: '开始时间',",
      "                    endPlaceholder: '结束时间',",
      "                },",
      "                {",
      "                    type: 'text',",
      "                    placeholder: '签约单号',",
      "                    prop: 'signOrderSn',",
      "                    clearable: true",
      "                },",
      "                {",
      "                    type: 'text',",
      "                    placeholder: '店铺名称',",
      "                    prop: 'businessName',",
      "                    clearable: true",
      "                },",
      "                {",
      "                    prop: 'status',",
      "                    type: 'select',",
      "                    placeholder: '签约状态',",
      "                    clearable: true,",
      "                    dicData: [",
      "                        { label: '待签约', value: 0 },",
      "                        { label: '已签约', value: 1 },",
      "                        { label: '拒绝签约', value: 2 }",
      "                    ]",
      "                }",
      "            ]",
      "        })",
      "        const pagination = ref({",
      "            currentPage: 1, // 当前页",
      "            total: 0, // 总条数",
      "            pageSize: 10 // 每页显示条数",
      "        })",
      "        function fitstatus(row, column) {",
      "            switch (row.status) {",
      "                case '0':",
      "                    return '待签约'",
      "                    break",
      "                case '1':",
      "                    return '已签约'",
      "                    break",
      "                case '2':",
      "                    return '拒绝签约'",
      "                    break",
      "                default:",
      "                    return ''",
      "            }",
      "        }",
      "        const tableLoading = ref(false)",
      "        const tableOptions = {",
      "            pageKey: PAGENAME_TYPE.JINGDONG_HOME_CARE_SIGN,",
      "            // index: true,",
      "            column: [",
      "                { label: '申请日期', prop: 'createTime', align: 'center' },",
      "                { label: '签约单号', prop: 'signOrderSn', align: 'center' },",
      "                { label: '商家名称', prop: 'businessName', align: 'center' },",
      "                { label: '店铺名称', prop: 'shopName', align: 'center' },",
      "                { label: '签约状态', prop: 'status', align: 'center', formatter: fitstatus },",
      "                { label: '操作', prop: 'operate', align: 'center' }",
      "            ]",
      "        }",
      "        const tableData = ref([])",
      "        return { searchParams, searchOptions, tableData, pagination, tableLoading, tableOptions }",
      "    },",
      "    data() {",
      "        return {",
      "        }",
      "    },",
      "    created() {",
      "        this.reloadData()",
      "    },",
      "    methods: {",
      "        reloadData() {",
      "            if (this.searchParams.entryTimes == null) {",
      "                this.searchParams.entryTimes = []",
      "            }",
      "",
      "            const startTime = this.searchParams.entryTimes.length > 0 ? this.searchParams.entryTimes[0] : undefined",
      "            const endTime = this.searchParams.entryTimes.length > 0 ? this.searchParams.entryTimes[1] : undefined",
      "",
      "            const params = {",
      "                pageIndex: this.pagination.currentPage,",
      "                pageSize: this.pagination.pageSize,",
      "                businessName: this.searchParams.businessName,",
      "                signOrderSn: this.searchParams.signOrderSn,",
      "                status: this.searchParams.status,",
      "                startTime,",
      "                endTime",
      "            }",
      "            getJDQueryBusSignPage(params).then(res => {",
      "                this.tableData = res.data.data.list",
      "                this.pagination.total = res.data.data.total",
      "                this.pagination.currentPage = res.data.data.pageNum",
      "            })",
      "        },",
      "        handlePageChange() {",
      "            this.reloadData()",
      "        },",
      "        searchList() {",
      "            this.pagination.currentPage = 1",
      "            this.reloadData()",
      "        },",
      "        xxx() {},",
      "    }",
      "}",
      "</script>",
      "",
      "<style scoped>",
      ".transaction-container {",
      "    padding: 20px;",
      "}",
      "</style>",
      ""
    ],
    "description": "组件规范table示例"
  },
  "组件规范table示例-下拉枚举": {
    "prefix": "table-lb-select",
    "body": [
      "<template>",
      "    <div class=\"transaction-container\">",
      "        <div class=\"filter-container\">",
      "            <lb-search :value=\"searchParams\" :options=\"searchOptions\" @load=\"searchList\" />",
      "            <lb-table",
      "                v-loading=\"tableLoading\"",
      "                :data=\"tableData\"",
      "                :pagination.sync=\"pagination\"",
      "                :options=\"tableOptions\"",
      "                border",
      "                fit",
      "                highlight-current-row",
      "                @page-change=\"handlePageChange\"",
      "            >",
      "                <template #operate=\"scope\">",
      "                    <el-button type=\"text\">查看{{ scope.row.xx }}</el-button>",
      "                </template>",
      "            </lb-table>",
      "",
      "        </div>",
      "    </div>",
      "</template>",
      "",
      "<script>",
      "import { getCurrentInstance } from 'vue'",
      "import { PAGENAME_TYPE } from '@/components/lbTableList/type'",
      "import { businelevel } from '@/data/ptxdjson'",
      "import { getJDQueryBusSignPage, getqueryCreateUser } from '@/api/businessmanage'",
      "export default {",
      "    setup() {",
      "        const instance = getCurrentInstance()",
      "        const store = instance.proxy.\\$store",
      "",
      "        const searchParams = ref({",
      "            status: undefined,",
      "            businesslevel: undefined,",
      "            createuserid: undefined",
      "        })",
      "        const searchOptions = ref({",
      "            pageKey: PAGENAME_TYPE.JINGDONG_HOME_CARE_SIGN,",
      "            material: false,",
      "            column: [",
      "                {",
      "                    prop: 'status',",
      "                    type: 'select',",
      "                    placeholder: '签约状态',",
      "                    visible: 'default',",
      "                    clearable: true,",
      "                    dicData: [",
      "                        { label: '待签约', value: 0 },",
      "                        { label: '已签约', value: 1 },",
      "                        { label: '拒绝签约', value: 2 }",
      "                    ]",
      "                },",
      "                {",
      "                    prop: 'businesslevel',",
      "                    type: 'select',",
      "                    placeholder: '请选择商家等级',",
      "                    visible: 'default',",
      "                    clearable: true,",
      "                    dicData: businelevel",
      "                },",
      "                {",
      "                    prop: 'createuserid',",
      "                    type: 'select',",
      "                    placeholder: '请选择创建人',",
      "                    visible: 'default',",
      "                    clearable: true,",
      "                    props: {",
      "                        listKey: 'data',",
      "                        label: item => item.userName,",
      "                        value: item => item.userId",
      "                    },",
      "                    dicParams: () => {",
      "                        return {}",
      "                    },",
      "                    dicFn: getqueryCreateUser",
      "                },",
      "                {",
      "                    prop: 'businesscid',",
      "                    type: 'select',",
      "                    placeholder: '商家品类',",
      "                    visible: 'default',",
      "                    clearable: true,",
      "                    dicData: store.getters.roleCidList",
      "                }",
      "            ]",
      "        })",
      "        const pagination = ref({",
      "            currentPage: 1, // 当前页",
      "            total: 0, // 总条数",
      "            pageSize: 10 // 每页显示条数",
      "        })",
      "        const tableLoading = ref(false)",
      "        const tableOptions = {",
      "            pageKey: PAGENAME_TYPE.JINGDONG_HOME_CARE_SIGN,",
      "            index: true,",
      "            column: [",
      "                { label: '申请日期', prop: 'createTime', align: 'center' },",
      "                { label: '签约单号', prop: 'signOrderSn', align: 'center' },",
      "                { label: '商家名称', prop: 'businessName', align: 'center' },",
      "                { label: '店铺名称', prop: 'shopName', align: 'center' },",
      "                { label: '操作', prop: 'operate', align: 'center' }",
      "            ]",
      "        }",
      "        const tableData = ref([])",
      "        return { searchParams, searchOptions, tableData, pagination, tableLoading, tableOptions }",
      "    },",
      "    data() {",
      "        return {",
      "        }",
      "    },",
      "    created() {",
      "        this.reloadData()",
      "    },",
      "    methods: {",
      "        reloadData() {",
      "            const { createuserid, businesslevel, status } = this.searchParams",
      "",
      "            const params = {",
      "                pageIndex: this.pagination.currentPage,",
      "                pageSize: this.pagination.pageSize,",
      "                createuserid,",
      "                businesslevel,",
      "                status",
      "            }",
      "            getJDQueryBusSignPage(params).then(res => {",
      "                this.tableData = res.data.data.list",
      "                this.pagination.total = res.data.data.total",
      "                this.pagination.currentPage = res.data.data.pageNum",
      "            })",
      "        },",
      "        handlePageChange() {",
      "            this.reloadData()",
      "        },",
      "        searchList() {",
      "            this.pagination.currentPage = 1",
      "            this.reloadData()",
      "        },",
      "    }",
      "}",
      "</script>",
      "",
      "<style scoped>",
      ".transaction-container {",
      "    padding: 20px;",
      "}",
      "</style>",
      ""
    ],
    "description": "组件规范table示例-下拉枚举"
  }
}
